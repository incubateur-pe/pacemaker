---
- name: Prepare
  hosts: all
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'http_proxy') }}"
    HTTP_PROXY: "{{ lookup('env', 'HTTP_PROXY') }}"
    HTTPS_PROXY: "{{ lookup('env', 'HTTPS_PROXY') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"
    NO_PROXY: "{{ lookup('env', 'NO_PROXY') }}"
  tasks:
    - name: configure debian proxy repository
      lineinfile:
        path: /etc/apt/sources.list
        line: deb {{ lookup('env', 'DEBIAN_PROXY') }} buster main
        regex: "^deb "
      when: 

    - name: "Remove /etc/hosts entry for ansible_hostname"
      ansible.builtin.lineinfile:
        path: /etc/hosts
        state: absent
        regexp: '{{ ansible_hostname }}'

    - name: Ensure needed packages are installed.
      apt:
        update_cache: yes
        name:
          - haproxy
          - python3-distutils
          - apache2

    - name: Copy HAProxy configuration in place.
      copy:
        content: |
          global
            log /dev/log  local0
            log /dev/log  local1 notice
            user haproxy
            group haproxy
            daemon

          defaults
            log global
            mode  http
            option  httplog
            option  dontlognull
            timeout connect 5000
            timeout client 50000
            timeout server 50000

          frontend testFrontend
              bind 0.0.0.0:8080
                mode tcp
              option tcplog
              default_backend testBackend

          backend testBackend
              mode tcp
              option tcplog
              option tcp-check
              balance roundrobin
              default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
              server test 127.0.0.1:80 check
        dest: /etc/haproxy/haproxy.cfg
        mode: 0644

    - name: Ensure HAProxy is started and enabled on boot.
      service: name=haproxy state=restarted enabled=yes
